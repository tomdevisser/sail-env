server {
    listen 443 ssl;
    server_name $domain;

    ssl_certificate /etc/nginx/certs/$domain.pem;
    ssl_certificate_key /etc/nginx/certs/$domain-key.pem;

    # Add resolver for Docker's internal DNS
    resolver 127.0.0.11 valid=30s;

    location / {
        # Use a variable to enable dynamic resolution
        set $upstream nginx_$site_name_clean:80;
        
        proxy_pass http://$upstream;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        
        # Timeouts to handle down containers
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
        
        # Custom error page for when site is down
        error_page 502 503 504 /offline.html;
    }
    
    # Serve a custom offline page when the site is down
    location = /offline.html {
        internal;
        root /etc/nginx/html;
        try_files /offline.html =502;
    }
}
